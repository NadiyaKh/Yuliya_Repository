08/20/2016  12:48 PM    <DIR>          ..
               0 File(s)              0 bytes
               2 Dir(s)  24,972,779,520 bytes free

D:\git_train>git status
On branch master

Initial commit

nothing to commit (create/copy files and use "git add" to track)

D:\git_train>touch data.txt
'touch' is not recognized as an internal or external command,
operable program or batch file.

D:\git_train>echo data.txt
data.txt

D:\git_train>echo $null >> data1.txt

D:\git_train>dir
 Volume in drive D is New Volume
 Volume Serial Number is 5454-A852

 Directory of D:\git_train

08/20/2016  12:56 PM    <DIR>          .
08/20/2016  12:56 PM    <DIR>          ..
08/20/2016  12:55 PM                 0 data.txt
08/20/2016  12:56 PM                 8 data1.txt
               2 File(s)              8 bytes
               2 Dir(s)  24,972,779,520 bytes free

D:\git_train>git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data.txt
        data1.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\git_train>git add data.txt

D:\git_train>git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   data.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt


D:\git_train>git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   data.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt
        folder/


D:\git_train>git add older/
fatal: pathspec 'older/' did not match any files

D:\git_train>git add folder/

D:\git_train>git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   data.txt
        new file:   folder/folder_data.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt


D:\git_train>git commit
[master (root-commit) cb3b9e2] First test commit with file anf folder with file
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 data.txt
 create mode 100644 folder/folder_data.txt

D:\git_train>dir
 Volume in drive D is New Volume
 Volume Serial Number is 5454-A852

 Directory of D:\git_train

08/20/2016  01:04 PM    <DIR>          .
08/20/2016  01:04 PM    <DIR>          ..
08/20/2016  12:55 PM                 0 data.txt
08/20/2016  12:56 PM                 8 data1.txt
08/20/2016  01:05 PM    <DIR>          folder
               2 File(s)              8 bytes
               3 Dir(s)  24,972,779,520 bytes free

D:\git_train>git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\git_train>git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   data.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt

no changes added to commit (use "git add" and/or "git commit -a")

D:\git_train>git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

D:\git_train>git add data.txt

D:\git_train>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   data.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt


D:\git_train>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   data.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   data.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        data1.txt


D:\git_train>git dif
git: 'dif' is not a git command. See 'git --help'.

Did you mean one of these?
        diff
        config
        difftool
        init

D:\git_train>git diff
diff --git a/data.txt b/data.txt
index 8013df8..bddb527 100644
--- a/data.txt
+++ b/data.txt
@@ -1 +1 @@
-change
\ No newline at end of file
+change +1
\ No newline at end of file

D:\git_train>git add data.txt

D:\git_train>git commit -m "Simple comment"
[master 892e2b5] Simple comment
 1 file changed, 1 insertion(+)

D:\git_train>git log
commit 892e2b5fdf4cd65b8ad39e412e53acf9d1fbaac2
Author: Yuliya Nykytenko <yuliya.nykytenko@gmail.com>
Date:   Sat Aug 20 13:43:44 2016 +0300

    Simple comment

commit cb3b9e2df9d8e407af69464475f37bfc5fb88ca3
Author: Yuliya Nykytenko <yuliya.nykytenko@gmail.com>
Date:   Sat Aug 20 13:13:03 2016 +0300

    First test commit with file anf folder with file

D:\git_train>git help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch

   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

D:\git_train>git help log

D:\git_train>git log
commit 892e2b5fdf4cd65b8ad39e412e53acf9d1fbaac2
Author: Yuliya Nykytenko <yuliya.nykytenko@gmail.com>
Date:   Sat Aug 20 13:43:44 2016 +0300

    Simple comment

commit cb3b9e2df9d8e407af69464475f37bfc5fb88ca3
Author: Yuliya Nykytenko <yuliya.nykytenko@gmail.com>
Date:   Sat Aug 20 13:13:03 2016 +0300

    First test commit with file anf folder with file

D:\git_train>git show 892e2b5fdf4cd65b8ad39e412e53acf9d1fbaac2
commit 892e2b5fdf4cd65b8ad39e412e53acf9d1fbaac2
Author: Yuliya Nykytenko <yuliya.nykytenko@gmail.com>
Date:   Sat Aug 20 13:43:44 2016 +0300

    Simple comment

diff --git a/data.txt b/data.txt
index e69de29..bddb527 100644
--- a/data.txt
+++ b/data.txt
@@ -0,0 +1 @@
+change +1
\ No newline at end of file

D:\git_train>